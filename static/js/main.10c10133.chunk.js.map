{"version":3,"sources":["assets/clock.svg","assets/pause.svg","assets/play.svg","assets/reset.svg","App.js","reportWebVitals.js","index.js"],"names":["App","intervalRef","useRef","audioRef","useState","breaks","setBreaks","session","setSession","isPlay","setIsPlay","time","setTime","isBreak","setIsBreak","isCountDowning","setIsCountDowning","playStop","state","countDown","console","log","clearInterval","current","setInterval","prev","parseInt","useEffect","play","setTimeout","pause","currentTime","pre","className","position","reverseOrder","src","clock","alt","id","minutes","Math","floor","seconds","timer","preload","ref","audio","onClick","reset","prevSession","toast","error","prevBreaks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAAe,G,MAAA,IAA0B,mCCA1B,MAA0B,kCCA1B,MAA0B,iCCA1B,MAA0B,kC,cCgQ1BA,MAxPf,WACE,IAAMC,EAAcC,iBAAO,MACrBC,EAAWD,iBAAO,MAExB,EAA4BE,mBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA4BJ,oBAAS,GAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAwBN,mBAAS,MAAjC,mBAAOO,EAAP,KAAaC,EAAb,KACA,EAA8BR,oBAAS,GAAvC,mBAAOS,EAAP,KAAgBC,EAAhB,KACA,EAA4CV,oBAAS,GAArD,mBAAOW,EAAP,KAAuBC,EAAvB,KAiCMC,EAAW,SAACC,GACF,SAAVA,GACFR,GAAU,GACVS,KACmB,SAAVD,IACTE,QAAQC,IAAI,OAAQV,GACpBD,GAAU,GACVM,GAAkB,GAClBM,cAAcrB,EAAYsB,WAIxBJ,EAAY,WAChBH,GAAkB,GAClBf,EAAYsB,QAAUC,aAAY,WAChCZ,GAAQ,SAACa,GAAD,OAAUC,SAASD,GAAQ,OAClC,MAqCL,OAlCAE,qBAAU,WACK,IAAThB,GACFR,EAASoB,QAAQK,OACjBC,YAAW,WACT1B,EAASoB,QAAQO,QACjB3B,EAASoB,QAAQQ,YAAc,IAC9B,MACMpB,EAAO,IAChBW,cAAcrB,EAAYsB,SAC1BP,GAAkB,GAClBF,GAAW,SAACkB,GAAD,OAAUA,KAEhBnB,GAIHD,EAAkB,GAAVL,GACRY,MAJAP,EAAiB,GAATP,GACRc,QAMH,CAACR,IAEJgB,qBAAU,WACHZ,GAAmBF,GACtBD,EAA4B,GAApBc,SAASnB,MAElB,CAACA,IAEJoB,qBAAU,YACHZ,GAAkBF,GACrBD,EAA2B,GAAnBc,SAASrB,MAElB,CAACA,IAGF,sBAAK4B,UAAU,MAAf,UACE,cAAC,IAAD,CAASC,SAAS,cAAcC,cAAc,IAC9C,iCACE,kDAEF,oCACE,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,aAAf,UACE,qBAAKG,IAAKC,EAAOC,IAAI,UACrB,qBACEC,GAAG,YACHN,UAAS,UACPtB,EAAO,GACH,mBACAE,EACA,aACA,gBAPR,SAvEI,WACZ,IAAI2B,EAAUC,KAAKC,MAAM/B,EAAO,IAC5BgC,EAAUhC,EAAiB,GAAV6B,EAGrB,OADAA,EAAUA,EAAU,GAAK,IAAMA,EAAUA,GACxB,KAFjBG,EAAUA,EAAU,GAAK,IAAMA,EAAUA,GA8E9BC,KAEH,uBACEL,GAAG,OACHM,QAAQ,OACRC,IAAK,SAACC,GAAD,OAAY5C,EAASoB,QAAUwB,GACpCX,IAAI,iHAGR,gCACE,qBACEH,UAAU,gBACVM,GAAE,UAAM1B,EAA0B,GAAhB,eAFpB,qBAMA,qBAAKoB,UAAU,cAAcM,GAAE,UAAK1B,EAAU,cAAgB,IAA9D,yBAKJ,sBAAKoB,UAAU,gBAAf,UACE,qBACEM,GAAG,aACHS,QAAS,WACE/B,EAATR,EAAkB,OAAmB,SAHzC,SAMGA,EACC,qBAAK2B,IAAKN,EAAOS,GAAG,OAAOD,IAAI,UAE/B,qBAAKF,IAAKR,EAAMW,GAAG,QAAQD,IAAI,WAGnC,qBAAKC,GAAG,QAAR,SACE,qBACEH,IAAKa,EACLX,IAAI,QACJU,QAAS,WACP7C,EAASoB,QAAQO,QACjB3B,EAASoB,QAAQQ,YAAc,EAC/BvB,EAAW,IACXF,EAAU,GACVM,EAAQ,MACRE,GAAW,GACXJ,GAAU,GACVY,cAAcrB,EAAYsB,SAC1BP,GAAkB,cAM5B,sBAAKiB,UAAU,UAAf,UACE,sBAAKA,UAAU,UAAf,UACE,sBAAMM,GAAG,gBAAT,4BACA,sBAAKN,UAAU,eAAf,UACE,qBACEM,GAAG,oBACHS,QAAS,WACFjC,IACCW,SAASnB,GAAW,EAClBmB,SAASnB,GAAW,GACtBC,GAAW,SAAC0C,GAAD,OAAiBxB,SAASwB,GAAe,KAEpDC,IAAMC,MAAM,qCAGdD,IAAMC,MAAM,wCAXpB,eAkBA,qBAAKb,GAAG,iBAAR,SAA0Bb,SAASnB,KACnC,qBACEgC,GAAG,oBACHS,QAAS,WACFjC,IACCW,SAASnB,IAAYmB,SAASnB,GAAW,EAC3CC,GAAW,SAAC0C,GAAD,OAAiBxB,SAASwB,GAAe,KAEpDC,IAAMC,MAAM,wCAPpB,qBAgBJ,sBAAKnB,UAAU,QAAf,UACE,sBAAMM,GAAG,cAAT,0BACA,sBAAKN,UAAU,aAAf,UACE,qBACEM,GAAG,kBACHS,QAAS,WACFjC,GACCV,IACEqB,SAASrB,GAAU,GACrBC,GAAU,SAAC+C,GAAD,OAAgB3B,SAAS2B,GAAc,KAEjDF,IAAMC,MAAM,qCARtB,eAgBA,qBAAKb,GAAG,eAAR,SAAwBb,SAASrB,KACjC,qBACEkC,GAAG,kBACHS,QAAS,WACFjC,IACCW,SAASrB,IAAWqB,SAASrB,GAAU,EACzCC,GAAU,SAAC+C,GAAD,OAAgB3B,SAAS2B,GAAc,KAEjDF,IAAMC,MAAM,sCAPpB,4BC/NGE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.10c10133.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/clock.f1689ff2.svg\";","export default __webpack_public_path__ + \"static/media/pause.209d34a8.svg\";","export default __webpack_public_path__ + \"static/media/play.676bed86.svg\";","export default __webpack_public_path__ + \"static/media/reset.701f70f9.svg\";","import { useEffect, useRef, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport clock from \"./assets/clock.svg\";\r\nimport pause from \"./assets/pause.svg\";\r\nimport play from \"./assets/play.svg\";\r\nimport reset from \"./assets/reset.svg\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nfunction App() {\r\n  const intervalRef = useRef(null);\r\n  const audioRef = useRef(null);\r\n\r\n  const [breaks, setBreaks] = useState(5);\r\n  const [session, setSession] = useState(25);\r\n  const [isPlay, setIsPlay] = useState(false);\r\n  const [time, setTime] = useState(1500);\r\n  const [isBreak, setIsBreak] = useState(false);\r\n  const [isCountDowning, setIsCountDowning] = useState(false);\r\n\r\n  // const onChangeHandle = (e) => {\r\n  //   const { name, value } = e.target;\r\n\r\n  //   console.log(value);\r\n  //   if (!/\\w/.test(value)) {\r\n  //     if (value === \"\") {\r\n  //       if (name === \"session\") {\r\n  //         setSession(\" \");\r\n  //       } else if (name === \"break\") {\r\n  //         setBreaks(\" \");\r\n  //       }\r\n  //     } else {\r\n  //       e.preventDefault();\r\n  //     }\r\n  //   } else {\r\n  //     if (name === \"session\" && value <= 60 && value > 0) {\r\n  //       setSession(value);\r\n  //     } else if (name === \"break\" && value > 0) {\r\n  //       setBreaks(value);\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  const timer = () => {\r\n    let minutes = Math.floor(time / 60);\r\n    let seconds = time - minutes * 60;\r\n    seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n    return minutes + \":\" + seconds;\r\n  };\r\n\r\n  const playStop = (state) => {\r\n    if (state === \"play\") {\r\n      setIsPlay(true);\r\n      countDown();\r\n    } else if (state === \"stop\") {\r\n      console.log(\"time\", time);\r\n      setIsPlay(false);\r\n      setIsCountDowning(false);\r\n      clearInterval(intervalRef.current);\r\n    }\r\n  };\r\n\r\n  const countDown = () => {\r\n    setIsCountDowning(true);\r\n    intervalRef.current = setInterval(() => {\r\n      setTime((prev) => parseInt(prev) - 1);\r\n    }, 1000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (time === 0) {\r\n      audioRef.current.play();\r\n      setTimeout(() => {\r\n        audioRef.current.pause();\r\n        audioRef.current.currentTime = 0;\r\n      }, 2000);\r\n    } else if (time < 0) {\r\n      clearInterval(intervalRef.current);\r\n      setIsCountDowning(false);\r\n      setIsBreak((pre) => !pre);\r\n\r\n      if (!isBreak) {\r\n        setTime(breaks * 60);\r\n        countDown();\r\n      } else {\r\n        setTime(session * 60);\r\n        countDown();\r\n      }\r\n    }\r\n  }, [time]);\r\n\r\n  useEffect(() => {\r\n    if (!isCountDowning && !isBreak) {\r\n      setTime(parseInt(session) * 60);\r\n    }\r\n  }, [session]);\r\n\r\n  useEffect(() => {\r\n    if (!isCountDowning && isBreak) {\r\n      setTime(parseInt(breaks) * 60);\r\n    }\r\n  }, [breaks]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Toaster position=\"bottom-left\" reverseOrder={false} />\r\n      <header>\r\n        <h1>Pomodoro Clock</h1>\r\n      </header>\r\n      <section>\r\n        <div className=\"section-wrap\">\r\n          <div className=\"image-wrap\">\r\n            <img src={clock} alt=\"clock\" />\r\n            <div\r\n              id=\"time-left\"\r\n              className={`${\r\n                time < 60\r\n                  ? \"under-one-minute\"\r\n                  : isBreak\r\n                  ? \"breakColor\"\r\n                  : \"sessionColor\"\r\n              }`}\r\n            >\r\n              {timer()}\r\n            </div>\r\n            <audio\r\n              id=\"beep\"\r\n              preload=\"auto\"\r\n              ref={(audio) => (audioRef.current = audio)}\r\n              src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <div\r\n              className=\"session-label\"\r\n              id={`${!isBreak ? \"timer-label\" : \"\"}`}\r\n            >\r\n              SESSION\r\n            </div>\r\n            <div className=\"break-label\" id={`${isBreak ? \"timer-label\" : \"\"}`}>\r\n              BREAK\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"timer-control\">\r\n          <div\r\n            id=\"start_stop\"\r\n            onClick={() => {\r\n              isPlay ? playStop(\"stop\") : playStop(\"play\");\r\n            }}\r\n          >\r\n            {isPlay ? (\r\n              <img src={pause} id=\"stop\" alt=\"pause\" />\r\n            ) : (\r\n              <img src={play} id=\"start\" alt=\"play\" />\r\n            )}\r\n          </div>\r\n          <div id=\"reset\">\r\n            <img\r\n              src={reset}\r\n              alt=\"reset\"\r\n              onClick={() => {\r\n                audioRef.current.pause();\r\n                audioRef.current.currentTime = 0;\r\n                setSession(25);\r\n                setBreaks(5);\r\n                setTime(1500);\r\n                setIsBreak(false);\r\n                setIsPlay(false);\r\n                clearInterval(intervalRef.current);\r\n                setIsCountDowning(false);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <div className=\"buttons\">\r\n        <div className=\"session\">\r\n          <span id=\"session-label\">Session Length</span>\r\n          <div className=\"session-wrap\">\r\n            <div\r\n              id=\"session-increment\"\r\n              onClick={() => {\r\n                if (!isCountDowning) {\r\n                  if (parseInt(session) > 0) {\r\n                    if (parseInt(session) < 60) {\r\n                      setSession((prevSession) => parseInt(prevSession) + 1);\r\n                    } else {\r\n                      toast.error(\"Session can't be greater than 60.\");\r\n                    }\r\n                  } else {\r\n                    toast.error(\"Session can't be smaller than one.\");\r\n                  }\r\n                }\r\n              }}\r\n            >\r\n              +\r\n            </div>\r\n            <div id=\"session-length\">{parseInt(session)}</div>\r\n            <div\r\n              id=\"session-decrement\"\r\n              onClick={() => {\r\n                if (!isCountDowning) {\r\n                  if (parseInt(session) && parseInt(session) > 1) {\r\n                    setSession((prevSession) => parseInt(prevSession) - 1);\r\n                  } else {\r\n                    toast.error(\"Session can't be smaller than one.\");\r\n                  }\r\n                }\r\n              }}\r\n            >\r\n              -\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"break\">\r\n          <span id=\"break-label\">Break Length</span>\r\n          <div className=\"break-wrap\">\r\n            <div\r\n              id=\"break-increment\"\r\n              onClick={() => {\r\n                if (!isCountDowning) {\r\n                  if (breaks) {\r\n                    if (parseInt(breaks) < 60) {\r\n                      setBreaks((prevBreaks) => parseInt(prevBreaks) + 1);\r\n                    } else {\r\n                      toast.error(\"Break can't be greater than 60.\");\r\n                    }\r\n                  }\r\n                }\r\n              }}\r\n            >\r\n              +\r\n            </div>\r\n            <div id=\"break-length\">{parseInt(breaks)}</div>\r\n            <div\r\n              id=\"break-decrement\"\r\n              onClick={() => {\r\n                if (!isCountDowning) {\r\n                  if (parseInt(breaks) && parseInt(breaks) > 1) {\r\n                    setBreaks((prevBreaks) => parseInt(prevBreaks) - 1);\r\n                  } else {\r\n                    toast.error(\"Break can't be smaller than one.\");\r\n                  }\r\n                }\r\n              }}\r\n            >\r\n              -\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}