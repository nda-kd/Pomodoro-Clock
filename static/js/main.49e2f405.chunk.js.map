{"version":3,"sources":["assets/clock.svg","assets/pause.svg","assets/play.svg","assets/reset.svg","App.js","reportWebVitals.js","index.js"],"names":["App","audioElement","useRef","useState","breaks","setBreaks","session","setSession","isPlay","setIsPlay","time","setTime","isBreak","setIsBreak","isCountDowning","setIsCountDowning","intervalID","setIntervalID","playStop","state","countDown","console","log","clearInterval","interval","setInterval","previousdisplayTime","useEffect","current","play","setTimeout","pause","currentTime","pre","parseInt","className","position","reverseOrder","src","clock","alt","id","minutes","Math","floor","seconds","timer","ref","style","onClick","reset","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49e2f405.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/clock.f1689ff2.svg\";","export default __webpack_public_path__ + \"static/media/pause.209d34a8.svg\";","export default __webpack_public_path__ + \"static/media/play.676bed86.svg\";","export default __webpack_public_path__ + \"static/media/reset.701f70f9.svg\";","import { useEffect, useRef, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport clock from \"./assets/clock.svg\";\r\nimport pause from \"./assets/pause.svg\";\r\nimport play from \"./assets/play.svg\";\r\nimport reset from \"./assets/reset.svg\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nfunction App() {\r\n  const audioElement = useRef(null);\r\n\r\n  const [breaks, setBreaks] = useState(5 * 60);\r\n  const [session, setSession] = useState(25 * 60);\r\n  const [isPlay, setIsPlay] = useState(false);\r\n  const [time, setTime] = useState(60);\r\n  const [isBreak, setIsBreak] = useState(false);\r\n  const [isCountDowning, setIsCountDowning] = useState(false);\r\n  const [intervalID, setIntervalID] = useState(null);\r\n\r\n  // const onChangeHandle = (e) => {\r\n  //   const { name, value } = e.target;\r\n\r\n  //   console.log(value);\r\n  //   if (!/\\w/.test(value)) {\r\n  //     if (value === \"\") {\r\n  //       if (name === \"session\") {\r\n  //         setSession(\" \");\r\n  //       } else if (name === \"break\") {\r\n  //         setBreaks(\" \");\r\n  //       }\r\n  //     } else {\r\n  //       e.preventDefault();\r\n  //     }\r\n  //   } else {\r\n  //     if (name === \"session\" && value <= 60 && value > 0) {\r\n  //       setSession(value);\r\n  //     } else if (name === \"break\" && value > 0) {\r\n  //       setBreaks(value);\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  const timer = () => {\r\n    let minutes = Math.floor(time / 60);\r\n    let seconds = time - minutes * 60;\r\n    seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n    return minutes + \":\" + seconds;\r\n  };\r\n\r\n  const playStop = (state) => {\r\n    if (intervalID === null) {\r\n      setIsPlay(true);\r\n      countDown();\r\n    } else {\r\n      console.log(\"time\", time);\r\n      setIsPlay(false);\r\n      setIsCountDowning(false);\r\n      clearInterval(intervalID);\r\n      setIntervalID(null);\r\n    }\r\n  };\r\n\r\n  const countDown = () => {\r\n    setIsCountDowning(true);\r\n    var interval = setInterval(() => {\r\n      setTime((previousdisplayTime) => previousdisplayTime - 1);\r\n    }, 1000);\r\n    setIntervalID(interval);\r\n  };\r\n\r\n  const resetHandler = () => {\r\n    audioElement.current.pause();\r\n    audioElement.current.currentTime = 0;\r\n    setSession(25 * 60);\r\n    setBreaks(5 * 60);\r\n    setTime(1500);\r\n    setIsBreak(false);\r\n    setIsPlay(false);\r\n    clearInterval(intervalID);\r\n    setIntervalID(null);\r\n    setIsCountDowning(false);\r\n  };\r\n\r\n  const incSessionTime = () => {\r\n    if (!isCountDowning) {\r\n      setSession(session >= 60 * 60 ? session : session + 60);\r\n    }\r\n  };\r\n\r\n  const decSessionTime = () => {\r\n    if (!isCountDowning) {\r\n      setSession(session <= 60 ? session : session - 60);\r\n    }\r\n  };\r\n\r\n  const incBreakTime = () => {\r\n    if (!isCountDowning) {\r\n      setBreaks(breaks >= 60 * 60 ? breaks : breaks + 60);\r\n    }\r\n  };\r\n\r\n  const decBreakTime = () => {\r\n    if (!isCountDowning) {\r\n      setBreaks(breaks <= 60 ? breaks : breaks - 60);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (time === 0) {\r\n      audioElement.current.play();\r\n      setTimeout(() => {\r\n        audioElement.current.pause();\r\n        audioElement.current.currentTime = 0;\r\n      }, 2000);\r\n      clearInterval(intervalID);\r\n      setIntervalID(null);\r\n      setIsCountDowning(false);\r\n      setIsBreak((pre) => !pre);\r\n\r\n      if (!isBreak) {\r\n        setTime(breaks);\r\n        countDown();\r\n      } else {\r\n        setTime(session);\r\n        countDown();\r\n      }\r\n    }\r\n  }, [time]);\r\n\r\n  useEffect(() => {\r\n    if (!isCountDowning && !isBreak) {\r\n      setTime(parseInt(session));\r\n    }\r\n  }, [session]);\r\n\r\n  useEffect(() => {\r\n    if (!isCountDowning && isBreak) {\r\n      setTime(parseInt(breaks));\r\n    }\r\n  }, [breaks]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Toaster position=\"bottom-left\" reverseOrder={false} />\r\n      <header>\r\n        <h1>Pomodoro Clock</h1>\r\n      </header>\r\n      <section>\r\n        <div className=\"section-wrap\">\r\n          <div className=\"image-wrap\">\r\n            <img src={clock} alt=\"clock\" />\r\n            <div\r\n              id=\"time-left\"\r\n              className={`${\r\n                time < 60\r\n                  ? \"under-one-minute\"\r\n                  : isBreak\r\n                  ? \"breakColor\"\r\n                  : \"sessionColor\"\r\n              }`}\r\n            >\r\n              {timer()}\r\n            </div>\r\n          </div>\r\n          <audio\r\n            src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\r\n            id=\"beep\"\r\n            ref={audioElement}\r\n          ></audio>\r\n          <div>\r\n            <div\r\n              className=\"session-label\"\r\n              id={`${!isBreak ? \"my-timer-label\" : \"\"}`}\r\n            >\r\n              SESSION\r\n            </div>\r\n            <div style={{ position: \"relative\" }}>\r\n              <span\r\n                className=\"break-label\"\r\n                id={`${isBreak ? \"my-timer-label\" : \"\"}`}\r\n              >\r\n                BREAK\r\n              </span>\r\n              <div id=\"timer-label\">{isBreak ? \"Break\" : \"Session\"}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"timer-control\">\r\n          <div\r\n            id=\"start_stop\"\r\n            onClick={() => {\r\n              isPlay ? playStop(\"stop\") : playStop(\"play\");\r\n            }}\r\n          >\r\n            {isPlay ? (\r\n              <img src={pause} id=\"stop\" alt=\"pause\" />\r\n            ) : (\r\n              <img src={play} id=\"start\" alt=\"play\" />\r\n            )}\r\n          </div>\r\n          <div>\r\n            <img\r\n              id=\"reset\"\r\n              src={reset}\r\n              alt=\"reset\"\r\n              onClick={() => resetHandler()}\r\n            />\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <div className=\"buttons\">\r\n        <div className=\"session\">\r\n          <span id=\"session-label\">Session Length</span>\r\n          <div className=\"session-wrap\">\r\n            <div\r\n              id=\"session-increment\"\r\n              onClick={() => {\r\n                incSessionTime();\r\n              }}\r\n            >\r\n              +\r\n            </div>\r\n            <div id=\"session-length\">{parseInt(session) / 60}</div>\r\n            <div\r\n              id=\"session-decrement\"\r\n              onClick={() => {\r\n                decSessionTime();\r\n              }}\r\n            >\r\n              -\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"break\">\r\n          <span id=\"break-label\">Break Length</span>\r\n          <div className=\"break-wrap\">\r\n            <div id=\"break-increment\" onClick={() => incBreakTime()}>\r\n              +\r\n            </div>\r\n            <div id=\"break-length\">{parseInt(breaks) / 60}</div>\r\n            <div id=\"break-decrement\" onClick={() => decBreakTime()}>\r\n              -\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}